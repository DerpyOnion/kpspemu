plugins {
    id 'org.jetbrains.kotlin.multiplatform' version '1.3.60'
}

allprojects {
    repositories {
        mavenLocal()
        maven { url "https://dl.bintray.com/korlibs/korlibs" }
        maven { url "https://dl.bintray.com/kotlin/kotlin-eap" }
        jcenter()
        mavenCentral()
    }

}

subprojects {
    apply plugin: 'kotlin-multiplatform'

    kotlin {
        js() {
            browser {
                testTask {
                    useKarma {
                        useChromeHeadless()
                    }
                }
            }
        }
        jvm()
        sourceSets {
            nonNativeCommonMain
            //nativeCommonMain
            //nativeCommonTest
            //nativePosixMain
            configure([jvmMain, jsMain]) {
                dependsOn nonNativeCommonMain
            }
            commonMain {
                dependencies {
                    implementation kotlin('stdlib-common')
                }
            }
            commonTest {
                dependencies {
                    implementation kotlin('test-common')
                    implementation kotlin('test-annotations-common')
                }
            }
            jsMain {
                dependencies {
                    implementation kotlin('stdlib-js')
                }
            }
            jsTest {
                dependencies {
                    implementation kotlin('test-js')
                }
            }
            /*
            mingwX64Main {
                dependsOn nativeCommonMain
            }
            mingwX64Test {
                dependsOn nativeCommonTest
            }
            //configure([iosX64Main, iosArm32Main, iosArm64Main, macosX64Main, linuxX64Main]) {
            configure([macosX64Main]) {
                dependsOn nativeCommonMain
                dependsOn nativePosixMain
            }
            //configure([iosX64Test, iosArm32Test, iosArm64Test, macosX64Test, linuxX64Test]) {
            configure([macosX64Test]) {
                dependsOn nativeCommonTest
            }
             */
        }
    }

    dependencies {
        commonMainImplementation "org.jetbrains.kotlin:kotlin-stdlib-common"
        commonTestImplementation "org.jetbrains.kotlin:kotlin-test-annotations-common"
        commonTestImplementation "org.jetbrains.kotlin:kotlin-test-common"

        jsMainImplementation "org.jetbrains.kotlin:kotlin-stdlib-js"
        jsTestImplementation "org.jetbrains.kotlin:kotlin-test-js"

        jvmMainImplementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
        jvmTestImplementation "org.jetbrains.kotlin:kotlin-test"
        jvmTestImplementation "org.jetbrains.kotlin:kotlin-test-junit"
    }

    // Fix for https://github.com/srs/gradle-node-plugin/issues/301
    repositories.whenObjectAdded {
        if (it instanceof IvyArtifactRepository) {
            metadataSources {
                artifact()
            }
        }
    }

    // Publishing
    group 'com.soywiz'
    version version
    apply plugin: 'maven-publish'

    def pomBaseData = {
        licenses {
            license {
                name "MIT License"
                url "https://raw.githubusercontent.com/korlibs/korge/master/LICENSE"
            }
        }
        scm {
            url "https://github.com/korlibs/korge"
        }
    }

    def generatePom = { pom ->
        pom.withXml {
            def root = it.asNode()
            root.appendNode('name', project.name)
            root.appendNode('description', 'PSP Emulator written in Kotlin')
            root.appendNode('url', 'https://github.com/kpspsemu/kpspsemu')
            root.children().last() + pomBaseData
        }
    }

    ext.generatePom = generatePom

    def publishUser = rootProject.findProperty('BINTRAY_USER') ?: project.findProperty('bintrayUser') ?: System.getenv('BINTRAY_USER')
    def publishPassword = rootProject.findProperty('BINTRAY_KEY') ?: project.findProperty('bintrayApiKey') ?: System.getenv('BINTRAY_API_KEY')

    if (publishUser && publishPassword) {
        publishing {
            repositories {
                maven {
                    credentials {
                        username publishUser
                        password publishPassword
                    }
                    url 'https://api.bintray.com/maven/soywiz/soywiz/korlibs/'
                    //url "https://api.bintray.com/content/soywiz/soywiz/korlibs/$projectVersion"
                }
            }

            configure(publications) {
                generatePom(pom)
            }
        }
    }
}

apply plugin: 'idea'

idea {
    module {
        excludeDirs = [
                ".gradle", "gradle",
                "@old",
                "assets",
                "build",
                "config",
                "dist",
                "docs",
                "kemu",
                "node_modules",
                "ms0",
                "psplibdoc",
        ].collect { file(it) }

    }
}