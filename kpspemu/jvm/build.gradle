apply plugin: 'kotlin-platform-jvm'
apply plugin: 'application'

sourceSets {
    main.kotlin.srcDirs += "src"
    main.resources.srcDirs += "resources"
    test.kotlin.srcDirs += "test"
    test.resources.srcDirs += "testresources"
}

sourceSets {
    main.resources.srcDirs += ['../common/resources']
    test.resources.srcDirs += ['../common/testresources']
}

dependencies {
    expectedBy project(":kpspemu-common")

    compile "com.soywiz:dynarek-jvm:$dynarekVersion"
    compile "com.soywiz:klogger-jvm:$kloggerVersion"
    if (klockVersion != '') compile "com.soywiz:klock-jvm:$klockVersion"
    compile "com.soywiz:korag-jvm:$koragVersion"
    compile "com.soywiz:korim-jvm:$korimVersion"
    compile "com.soywiz:korau-jvm:$korauVersion"
    compile "com.soywiz:korau-atrac3plus-jvm:$korauAtrac3plusVersion"
    compile "com.soywiz:korio-jvm:$korioVersion"
    compile "com.soywiz:korge-jvm:$korgeVersion"
    compile "com.soywiz:korui-jvm:$koruiVersion"
    compile "com.soywiz:krypto-jvm:$kryptoVersion"
}

mainClassName = 'com.soywiz.kpspemu.MainKt'

task runApp(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath

    main = mainClassName

    // arguments to pass to the application
    workingDir rootProject.rootDir
}

jar {
    manifest {
        attributes("Main-Class": mainClassName)
    }
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}
